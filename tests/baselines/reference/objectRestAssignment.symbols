=== tests/cases/conformance/types/rest/objectRestAssignment.ts ===
let x;
>x : Symbol(x, Decl(objectRestAssignment.ts, 0, 3))

let ka;
>ka : Symbol(ka, Decl(objectRestAssignment.ts, 1, 3))

let nested;
>nested : Symbol(nested, Decl(objectRestAssignment.ts, 2, 3))

let other;
>other : Symbol(other, Decl(objectRestAssignment.ts, 3, 3))

let rest;
>rest : Symbol(rest, Decl(objectRestAssignment.ts, 4, 3))

let complex: { x: { ka, ki }, y: number };
>complex : Symbol(complex, Decl(objectRestAssignment.ts, 5, 3))
>x : Symbol(x, Decl(objectRestAssignment.ts, 5, 14))
>ka : Symbol(ka, Decl(objectRestAssignment.ts, 5, 19))
>ki : Symbol(ki, Decl(objectRestAssignment.ts, 5, 23))
>y : Symbol(y, Decl(objectRestAssignment.ts, 5, 29))

({x: { ka, ...nested }, y: other, ...rest} = complex);
>x : Symbol(x, Decl(objectRestAssignment.ts, 6, 2))
>ka : Symbol(ka, Decl(objectRestAssignment.ts, 6, 6))
>y : Symbol(y, Decl(objectRestAssignment.ts, 6, 23))
>other : Symbol(other, Decl(objectRestAssignment.ts, 3, 3))
>complex : Symbol(complex, Decl(objectRestAssignment.ts, 5, 3))

